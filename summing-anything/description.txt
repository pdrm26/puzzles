# Flexible Summation Function

## Overview
This project involves creating a flexible `mysum` function that can handle various data types, including **integers**, **floats**, **strings**, **lists**, and **tuples**. The function should accept multiple arguments of the same type and return a new sequence of that type.

## Key Requirements
- **Type Consistency**: All input arguments must be of the same type.
- **Operator Compatibility**: The type must support the `+` operator.
- **Return Type**: The result should be a new sequence of the same type as the input arguments.

## Example Use Cases
- **Strings**: `mysum('abc', 'def')` returns `'abcdef'`.
- **Lists**: `mysum([1,2,3], [4,5,6])` returns `[1,2,3,4,5,6]`.
- **Integers**: `mysum(1, 2, 3)` returns `6`.

## Purpose
This exercise aims to enhance understanding of sequences, types, and dynamic return values.
